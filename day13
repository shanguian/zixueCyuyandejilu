#include<stdio.h>
//int main() {
//	int a = 10;
//	int* p = &a;//指针变量
//
//	return  0;
//}

//int main() {
//	/*printf("%d\n", sizeof(int*));
//	printf("%d\n", sizeof(char*));
//	printf("%d\n", sizeof(short*));
//	printf("%d\n", sizeof(double*));*/
//	int a = 0x11223344;
//	int* pa = &a;
//	char* pb = &a;
//	printf("%p\n", pa);
//	printf("%p\n", pb);
//	//指针类型代表它在空间中可以访问几个字节
//	return 0;
//}

//int main() {
//	int a = 0x11223344;
//	int* pa = &a;
//	char* pb = &a;
//	printf("%p\n", pa);
//	printf("%p\n", pa+1);
//
//	printf("%p\n", pb);
//	printf("%p\n", pb+1);
//     //指针类型决定了往后走一步的多长，即指针的步长
//	return 0;
//}

//int main() {
//	int arr[10] = { 0 };
//	int* p = arr;//数组名--首元素的地址
//	int i = 0;
//	for (i = 0; i < 10; i++) {
//		*(p + i) = 1;
//		printf("%d\n", arr[i]);
//	}
//	return 0;
//}

int* test() {
	int a = 10;
	return &a;
}
int main() {
	//野指针
	//1.指针未初始化
	//int* p;
	//2.指针越界
	int arr[10] = { 0 };
	int* p = arr;
	int i = 0;
	for (i = 0; i < 12; i++) {
		p++;
	}
	//3.指针指向空间被释放
	int* q = test();
	return 0;
}
