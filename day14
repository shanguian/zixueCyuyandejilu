#include<stdio.h>
//int main() {
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10};
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int* p = arr;
//	int i = 0;
//	/*for (i = 0; i < sz; i++) {
//		printf("%d ", *p);
//		p++;
//	}*/
//	/*for (i = 0; i < 5; i++) {
//		printf("%d ", *p);
//		p+=2;
//	}*/
//	for (i = 0; i <5; i++) {
//		printf("%d ", *p);
//		p-=2;
//	}
//	return 0;
//}

//int main() {
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	char ch[5] = { 0 };
//	printf("%d\n", &arr[9] - &arr[0]);//10-1=9
//	printf("%d\n", &arr[9] - &ch[0]);//错误的，不知道指向哪块地址
//	return 0;
//}

//int my_strlen(char* str) {
//	char* start = str;
//	char* end = str;
//	while (*end != '\0') {
//		end++;
//	}
//	return end - start;
//}
//int main() {
//	//求字符串长度
//	char arr[] = "bit";
//	int len = my_strlen(arr);
//	printf("%d\n", len);
//	return 0;
//}

//int main() {
//	int arr[10] = { 0 };
//	printf("%p\n", arr);
//	printf("%p\n", arr+1);
//	//1.&arr-代表整个数组的地址
//	//2.sizeof(数组名)-代表整个数组的字节大小
//	printf("%p\n", &arr[0]);
//	printf("%p\n", &arr[0]+1);
//
//	printf("%p\n", &arr);
//	printf("%p\n", &arr + 1);
//	return 0;
//}

//int main() {
//	int arr[10] = { 0 };
//	int* p = arr;
//	int i = 0;
//	for (i = 0; i < 10; i++) {
//		*(p + i) = i;
//	}
//	for (i = 0; i < 10; i++) {
//		printf("%d ", *(p + i));
//	}
//	/*for (i = 0; i < 10; i++) {
//		printf("%p =======%p\n", p + i, &arr[i]);
//	}*/
//	return 0;
//}

//int main() {
//	int a = 10;
//	int* pa = &a;
//	int** ppa = &pa;//二级指针 int*代表它的类型，*代表它是一个指针
//	**ppa = 20;
//	printf("%d\n", **ppa);
//	printf("%d\n", a);
//	return 0;
//}

int main() {
	//指针数组--用来存放指针的数组
	//数组指针--用来存放数组的指针
	int a = 10;
	int b = 20;
	int c = 30;
	/*int* pa = &a;
	int* pb = &b;
	int* pc = &c;*/
	int* arr2[3] = { &a,&b,&c };
	int i = 0;
	for (i = 0; i < 3; i++) {
		printf("%d ", *(arr2[i]));
	}
	return 0;
}
