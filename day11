#include<stdio.h>
//int main() {
//	int a = 5 / 2;//商2余1
//	printf("a=%d\n", a);
//	return 0;
//}

//int main() {
//	int a = 16;
//	//>> --右移操作符
//	//移动的是二进制位
//	//27个零10000，32位系统
//	//算术右移，右边丢弃，左边补原符号位
//	int b = a >> 1;
//	printf("%d\n", b);
//	return 0;
//}

//int main() {
//	int a =-1;
//	//整数的二进制表示有：原码、补码、反码
//	//存储到内存中的是补码
//	//1中间30个0-1,  -原码
//	//1中间30个1-0， -反码
//	//1中间30个1-1， -补码就是反码加1
//	int b = a >> 1;
//	printf("%d\n", b);
//	return 0;
//}

//int main() {
//	int a = 5;
//	int b = a << 1;
//	//左移操作符
//	//左边丢弃，右边补0
//	//前面29个0-101
//	printf("%d\n", b);
//	return 0;
//}

//int main() {
//	//&-按2进制位与
//	/*int a = 3;
//	int b = 5;
//	int c = a & b;*/
//	//00000000000000000000000000000011 --3的补码
//	//00000000000000000000000000000101 --5的补码
//	//00000000000000000000000000000001 --后面三位有零直接变零
//	/*printf("%d\n", c);*/
//	//|-按2进制位或
//	/*int a = 3;
//	int b = 5;
//	int c = a | b;*/
//	//00000000000000000000000000000011 --3的补码
//	//00000000000000000000000000000101 --5的补码
//	//00000000000000000000000000000111 --后面三位有1直接变1
//	/*printf("%d\n", c);*/
//	//按2进制位异或
//	//相同为0，相异为1
//	int a = 3;
//	int b = 5;
//	int c = a^b;
//	printf("%d\n", c);
//	//00000000000000000000000000000011 --3的补码
//	//00000000000000000000000000000101 --5的补码
//	//00000000000000000000000000000110
//	return 0;
//}

//int main() {
//	//交换两个值，不能有临时变量
//	int a = 3;
//	int b = 5;
//	//加减法--可能会溢出
//	/*a = a + b;
//	b = a - b;
//	a = a - b;*/
//	//异或法
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;
//	printf("a=%d b=%d", a, b);
//	return 0;
//}

//int main(){
//	//编写代码，求一个整数存储在内存中的二进制中1的个数
//	int num = 0;
//	scanf_s("%d", &num);
//	//统计num补码中有几个1
//	int count = 0;
//	int i = 0;
//	for (i = 0; i < 32; i++) {
//		if ((num >> i) & 1 == 1)
//			count++;
//	}
//	printf("%d\n", count);
//	//32bit
//	//num&1==1
//	//00000000000000000000000000000011
//	//00000000000000000000000000000001
//	//00000000000000000000000000000001
//	return 0;
//}

//int main() {
//	int w = 20;
//	w = 50;//不满意就赋值
//	//赋值操作符可以连续使用
//	int a = 10;
//	a += 2;//符合赋值符
//	return 0;
//}

int main() {
	/*int a = -5;
	a = -a;*/
	//int a = 10;
	//int* p=&a;//取地址操作符
	//*p=20;//解引用操作符
	int a = 10;
	char c = 'r';
	char* p = &c;
	int arr[10] = { 0 };
	//计算的是变量所占空间的字节大小
	printf("%d\n", sizeof(a));//4
	printf("%d\n", sizeof(int));

	printf("%d\n", sizeof(c));//1
	printf("%d\n", sizeof(char));

	printf("%d\n", sizeof(p));//4
	printf("%d\n", sizeof(char*));

	printf("%d\n", sizeof(arr));//10*4
	printf("%d\n", sizeof(int [10]));//数组去掉数组名就是类型
	return 0;
}
